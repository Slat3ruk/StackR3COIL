import_code("./util/color.src")
import_code("./util/logging.src")

log = new Logger
log.set_log_level("DEBUG")

ipAddress = params[0]
isLanIp = is_lan_ip ( ipAddress )

if isLanIp then
	router = get_router;
else
	router = get_router( ipAddress )
end if

if router == null then 
	log.error("Ip address not found")
	exit("")
end if

ports = null

if not isLanIp then
	ports = router.used_ports
else
	ports = router.device_ports(ipAddress)
end if

if ports == null then 
	log.error("Ip address not found")
	exit("")
end if

info = "port state service version lan"
log.info(green("Starting nmap scanner v0.1 " + current_date))
log.info("Scanning "+ params[0] + "\n")
log.info("Interesting ports on " + params[0] + "\n")
if(ports.len ==0) then 
	log.warning("Scan finished. No open ports found.")
	exit("")
end if

for port in ports
	service_info = router.port_info(port)
	lan_ips = port.get_lan_ip
	port_status = "open"
	
	if(port.is_closed and not isLanIp) then
		port_status = "closed"
	end if
	info = info +"\n" + port.port_number + " " + port_status + " " + service_info + " " + lan_ips
end for
log.info(format_columns(info) + "\n")


adminInfo = whois(params[0])
infoLines = adminInfo.split(char(10))
infoObject = {}
log.info(red(infoLines[0]))
log.info(yellow(infoLines[1]))
log.info(yellow(infoLines[2]))

crypto = include_lib("/lib/crypto.so")
// print(crypto.smtp_user_list(params[0],25))

users = crypto.smtp_user_list(params[0],25)
log.info(green("\nSMTP users found:"))
if users.len == 0 then
	log.warning("No users found")
else
	log.info("Users found: " + users.len)
end if
for user in users
	log.info(user)
end for
