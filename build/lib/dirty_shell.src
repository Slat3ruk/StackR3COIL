import_code("../util/ip_addr.src")

DirtyShell = {}

DirtyShell.shell = null

DirtyShell.cmd = function()
	while (true)
		// TODO: Something to do with get_custom_object?
		// username = remote_shell.launch("/bin/whoami")
		// dir = remote_shell.launch("/bin/pwd")

		// cmd_str = user_input(username + ":" + dir + "$").trim
		cmd_str = user_input("> ").trim

		if not cmd_str then
			log.warn "Empty command string entered"
		else if cmd_str.upper == "EXIT" then
			log.info "Closing shell..."
			break
		else
			cmd = cmd_str
			args = ""

			// Does our command contain arguments?
			args_idx = cmd_str.indexOf(" ")
			if args_idx then
				cmd = cmd_str[ : args_idx].trim
				args = cmd_str[args_idx : ].trim
			end if

			if not cmd.indexOf("/bin/") then cmd = "/bin/" + cmd
			log.debug "Sending cmd: " + cmd + " " + args
			DirtyShell.shell.launch cmd, args
		end if
	end while
end function

DirtyShell._exit = function()
    // Empty function
end function

DirtyShell._ping = function()
    log.info("Ping options:")
    log.info("[0] Single IP")
    log.info("[1] Multi IP")
    print

    user_option = user_input("Select option (0-1): ").to_int

    if typeof(user_option) != "number" or user_option < 0 or user_option > 1 then
        log.warning("Invalid option\n")
        return
    else if user_option == 0 then
        DirtyShell.ping_single
    else
        DirtyShell.ping_multi
    end if      
end function

DirtyShell.ping_single = function()
    ip_addr = user_input("Enter ip address (format 255.255.255.255): ").trim
    
    if not is_valid_ip(ip_addr) then
        log.warning("Invalid ip address")
        return
    end if

    result = DirtyShell.shell.ping(ip_addr)

    if result == 1 then
        log.info(ip_addr + " host reachable\n")
    else if result == 0 then
        log.info(ip_addr + " host not reachable\n")
    else
        log.warning(result + "\n")
    end if
end function

DirtyShell.ping_multi = function()
    ip_addr = user_input("Enter ip address (format 1.1.1.1-255): ").trim

    if not is_valid_ip_range then
        log.warning("Invalid ip range")
        return
    end if
end function

DirtyShell.options = {
    0 : {"name": "cmd", "cmd" : @DirtyShell.cmd},
    1 : {"name": "ping", "cmd": @DirtyShell._ping},
    2 : {"name" : "start_terminal", "cmd" : null},
    3 : {"name": "exit", "cmd" : @DirtyShell._exit},
}

DirtyShell.execute = function()
    options = DirtyShell.options

	if not DirtyShell.shell then
		log.error "No shell attached, set DirtyShell.shell = <remote_shell>"
		return 
	end if

    while (true)
        DirtyShell.print_menu
        print
        user_option = user_input("Select option (0-" + (options.len-1) + "): ").to_int
        print
        if typeof(user_option) != "number" or not options.hasIndex(user_option) then 
            log.warning("Option not recognised, try again")
            continue
        else if options[user_option]["name"] == "exit" then
            log.info("Closing Dirty Shell...")
            break
        else
            // Execute handler
            options[user_option]["cmd"]
        end if
    end while
end function

DirtyShell.print_menu = function()
    log.info("Dirty Shell options:")
    options = DirtyShell.options

    for option in options.indexes
        log.info("[" + option + "] - " + options[option]["name"])
    end for
end function

